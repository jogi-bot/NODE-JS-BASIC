# NODE-JS-BASIC
NODE JS BASIC TOPIC COVER IN THIS MY REPO
In an Express.js application, both bodyParser.json() and bodyParser.urlencoded() middleware are commonly used to handle incoming HTTP request bodies, but they serve different purposes.

bodyParser.json({ limit: '5mb' }): This middleware is used to parse incoming JSON data from the request body. The { limit: '5mb' } option sets a maximum size limit of 5 megabytes for JSON data that can be received in a single request. This is particularly useful when you want to restrict the size of JSON payloads to prevent excessive memory consumption or denial-of-service attacks. It's important to set an appropriate limit based on your application's needs.

bodyParser.urlencoded({ extended: true }): This middleware is used to parse incoming URL-encoded form data from the request body. URL-encoded form data is often sent from HTML forms or from clients that don't support sending JSON data. The { extended: true } option enables the parsing of complex objects and arrays within the form data.

In many cases, you might need to support both JSON data and URL-encoded form data in your Express application, depending on the types of requests your application handles. For instance:

You might use JSON for more structured and complex data payloads.
You might use URL-encoded form data for simpler data submissions from HTML forms or basic API requests.
